{"version":3,"file":"static/js/310.1f9e43f5.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/LoadMoreBtn/LoadMoreBtn.module.css?7c53","components/LoadMoreBtn/LoadMoreBtn.jsx","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieListItem/MovieListItem.module.css?83b7","components/MovieListItem/MovieListItem.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","webpack://goit-react-hw-05-movies/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx","services/movies-api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loadMoreBtn\":\"LoadMoreBtn_loadMoreBtn__EJd7v\"};","import PropTypes from 'prop-types';\nimport styles from '../LoadMoreBtn/LoadMoreBtn.module.css';\nexport default function Button({ onClick }) {\n  return (\n    <button type=\"button\" onClick={onClick} className={styles.loadMoreBtn}>\n      Show more\n    </button>\n  );\n}\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import ContentLoader from 'react-content-loader';\nconst MyLoader = props => (\n  <ContentLoader\n    speed={2}\n    width={600}\n    height={120}\n    viewBox=\"0 0 600 120\"\n    backgroundColor=\"#5422dd\"\n    foregroundColor=\"#f4f0f0\"\n    {...props}\n  >\n    <circle cx=\"184\" cy=\"60\" r=\"20\" />\n    <circle cx=\"426\" cy=\"60\" r=\"20\" />\n    <circle cx=\"303\" cy=\"60\" r=\"20\" />\n  </ContentLoader>\n);\nexport default MyLoader;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieItemTitle\":\"MovieListItem_movieItemTitle__E0iTD\",\"movieItemItem\":\"MovieListItem_movieItemItem__foXOj\",\"movieItemImg\":\"MovieListItem_movieItemImg__j3dcD\"};","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport outOfPoster from '../../images/noPosterAvailable.png';\nimport styles from './MovieListItem.module.css';\nconst MovieListItem = ({ id, title, poster }) => {\n  const location = useLocation();\n  return (\n    <li className={styles.movieItemItem}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <h3 className={styles.movieItemTitle}>{title}</h3>\n        {poster ? (\n          <img\n            src={`https://image.tmdb.org/t/p/w500${poster}`}\n            alt={title}\n            width={120}\n            className={styles.movieItemImg}\n          />\n        ) : (\n          <img\n            src={outOfPoster}\n            alt={title}\n            width={120}\n            className={styles.movieItemImg}\n          />\n        )}\n      </Link>\n    </li>\n  );\n};\nMovieListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string,\n};\nexport default MovieListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__uFrOZ\"};","import PropTypes from 'prop-types';\nimport MovieListItem from 'components/MovieListItem/MovieListItem';\nimport styles from './MovieList.module.css';\nconst MovieList = ({ movies }) => {\n  return (\n    <ul className={styles.movieList}>\n      {movies.map(({ id, original_title, poster_path }) => (\n        <MovieListItem\n          key={id}\n          id={id}\n          title={original_title}\n          poster={poster_path}\n        />\n      ))}\n    </ul>\n  );\n};\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"Searchbar_formWrapper__wqJjc\",\"searchInput\":\"Searchbar_searchInput__+BnhG\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport styles from '../Searchbar/Searchbar.module.css';\nexport default function Searchbar({ onSubmit }) {\n  const [movieValue, setMovieValue] = useState('');\n  const handleNameChange = event =>\n    setMovieValue(event.currentTarget.value.toLowerCase());\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (movieValue.trim() === '') {\n      toast.error('Enter the value of the request!');\n      return;\n    }\n    onSubmit(movieValue);\n    setMovieValue('');\n  };\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={styles.formWrapper}>\n        <input\n          type=\"text\"\n          name=\"movieValue\"\n          value={movieValue}\n          onChange={handleNameChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search\"\n          className={styles.searchInput}\n        />\n      </form>\n    </>\n  );\n}\nSearchbar.propTypes = { onSubmit: PropTypes.func.isRequired };\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"MoviesPage_loader__y4+uI\"};","import toast from 'react-hot-toast';\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport * as moviesApi from 'services/movies-api';\nimport MovieList from 'components/MovieList/MovieList';\nimport Searchbar from '../../components/Searchbar/Searchbar';\nimport MyLoader from 'components/Loader/Loader';\nimport Button from 'components/LoadMoreBtn/LoadMoreBtn';\nimport styles from '../MoviesPage/MoviesPage.module.css';\nexport default function MoviesPage() {\n  const [moviesArr, setMoviesArr] = useState([]);\n  const [movieValue, setMovieValue] = useState('');\n  const [currentPage, setÐ¡urrentPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigation = useNavigate();\n  const location = useLocation();\n  const handleFormSubmit = newRequest => {\n    if (movieValue === newRequest) {\n      return;\n    }\n    setMovieValue(newRequest);\n    navigation({ ...location, search: `?query=${newRequest}` });\n    setError(null);\n    setMoviesArr([]);\n  };\n  useEffect(() => {\n    if (location.search === '') {\n      return;\n    }\n    const newRequest = new URLSearchParams(location.search).get('query');\n    setMovieValue(newRequest);\n  }, [location.pathname, location.search]);\n  useEffect(() => {\n    if (!movieValue) return;\n    setLoading(true);\n    const fetchArrMovies = () => {\n      moviesApi\n        .getSearchFilm(movieValue, currentPage)\n        .then(movies => {\n          if (movies.results.length === 0) {\n            toast.error('There is no result for your request!');\n          }\n          const result = movies.results;\n          setMoviesArr(prevMovie => [...prevMovie, ...result]);\n        })\n        .catch(error => setError(error))\n        .finally(() => setLoading(false));\n    };\n    fetchArrMovies();\n  }, [currentPage, movieValue]);\n  const onLoadMore = () => {\n    setLoading(true);\n    setÐ¡urrentPage(prevPage => prevPage + 1);\n  };\n  return (\n    <>\n      <Searchbar onSubmit={handleFormSubmit} />\n      {moviesArr.length > 0 && <MovieList movies={moviesArr} />}\n      {error && <h2>Sorry, something went wrong: {error.message}</h2>}\n      {loading && (\n        <div className={styles.loader}>\n          <MyLoader style={{ marginRight: 'auto', marginLeft: 'auto' }} />\n        </div>\n      )}\n      {!loading && moviesArr.length > 0 && !error && (\n        <Button onClick={onLoadMore} />\n      )}\n    </>\n  );\n}\n","const BASE_URL = `https://api.themoviedb.org/3`;\nconst API_KEY = `api_key=221ed015def0321f18a85f3fc7b4d6fa`;\nasync function fetchWithErrorHandlling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('404 Page not found :('));\n}\nexport function getTrendingFilms(currentPage) {\n  return fetchWithErrorHandlling(\n    `${BASE_URL}/trending/movie/day?${API_KEY}&page=${currentPage}`,\n  );\n}\nexport function getCurrentFilm(movieId) {\n  return fetchWithErrorHandlling(`${BASE_URL}/movie/${movieId}?${API_KEY}`);\n}\nexport function getCurrentFilmCredits(movieId) {\n  return fetchWithErrorHandlling(\n    `${BASE_URL}/movie/${movieId}/credits?${API_KEY}`,\n  );\n}\nexport function getReviews(movieId) {\n  return fetchWithErrorHandlling(\n    `${BASE_URL}/movie/${movieId}/reviews?${API_KEY}`,\n  );\n}\nexport function getSearchFilm(value, currentPage) {\n  return fetchWithErrorHandlling(\n    `${BASE_URL}/search/movie?${API_KEY}&language=en-US&query=${value}&page=${currentPage}&include_adult=false`,\n  );\n}\n"],"names":["Button","onClick","type","className","styles","props","speed","width","height","viewBox","backgroundColor","foregroundColor","cx","cy","r","id","title","poster","location","useLocation","to","state","from","src","alt","outOfPoster","movies","map","original_title","poster_path","Searchbar","onSubmit","useState","movieValue","setMovieValue","event","preventDefault","trim","toast","name","value","onChange","currentTarget","toLowerCase","autoComplete","autoFocus","placeholder","MoviesPage","moviesArr","setMoviesArr","currentPage","setÐ¡urrentPage","loading","setLoading","error","setError","navigation","useNavigate","useEffect","search","newRequest","URLSearchParams","get","pathname","moviesApi","then","results","length","result","prevMovie","catch","finally","MovieList","message","style","marginRight","marginLeft","prevPage","BASE_URL","API_KEY","fetchWithErrorHandlling","url","config","fetch","response","ok","json","Promise","reject","Error","getTrendingFilms","getCurrentFilm","movieId","getCurrentFilmCredits","getReviews","getSearchFilm"],"sourceRoot":""}